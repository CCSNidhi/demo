name: .NET

on:
  push: 
    branches:
      - main

jobs:
  build:
    runs-on: Windows-latest
    env:
         VERSION_FILE_NAME: 'VERSION'
         VERSION_BUMP_FILE: 'version_fragment'
   
         ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x

      - name: Install MAUI workload  
        run: dotnet workload install maui
        working-directory: ./MauiApp_version/MauiApp_version
        
         
 
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Debug Environment Variable
        run: |


      - name: Get Current Version
        id: getVersion
        run: |
          $version = [regex]::match((Get-Content -Raw MauiApp_version/MauiApp_version/MauiApp_version.csproj), '(?<=<Version>).*?(?=<\/Version>)').Value
          Write-Host "Current version: $version"
          echo "##vso[task.setvariable variable=version]$version"

      - name: Create VERSION file with Current Version
        run: echo $env:version > $env:VERSION_FILE_NAME
      - name: Read version fragment from file
        id: getVersionFragment
        run: |
         $versionFragment = Get-Content -Raw version_fragment
         echo "Version fragment: $versionFragment"
         echo "::set-env name=VERSION_FRAGMENT::$versionFragment"
        shell: pwsh
     
     
      - name: Generate versions
        uses: HardNorth/github-version-generate@v1.3.0
        with:
          version-source: file
     
          version-file: ${{ env.VERSION_FILE_NAME }}
          next-version-increment-patch: ${{ contains(env.VERSION_FRAGMENT, 'patch') }}
          next-version-increment-minor: ${{ contains(env.VERSION_FRAGMENT, 'minor') }}
          next-version-increment-major: ${{ contains(env.VERSION_FRAGMENT, 'major') }}
      - name: Build
        run: |
        
         dotnet publish MauiApp_version.csproj -c Release -f:net7.0-windows10.0.19041.0 /p:GenerateAppxPackageOnBuild=true /p
        working-directory: ./MauiApp_version/MauiApp_version
      - name: Show version fragment
        run: |
         echo "Version fragment: $VERSION_FRAGMENT"
      
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: maui-app-msix
          path: ./**/*.msix  




        




