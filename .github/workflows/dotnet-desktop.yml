name: .NET

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: Windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x

      - name: Install MAUI workload 
        run: dotnet workload install maui
        working-directory: ./MauiApp_version/MauiApp_version

      - name: Install Versionize
        run: dotnet tool install --global Versionize

      - name: Setup git
        run: |
          git config --local user.email "ntailorchambal@gmail.com"
          git config --local user.name "CCSNidhi"

      - name: Get Latest Tag Name
        id: get-latest-tag
        run: |
         $API_RESPONSE = Invoke-RestMethod -Uri "https://api.github.com/repos/CCSNidhi/demo/tags" -Headers @{"Authorization"="Bearer $env:GITHUB_TOKEN"} 
         $LATEST_TAG_NAME = $API_RESPONSE[0].name
         Write-Host "Latest Tag Name: $LATEST_TAG_NAME"

      - name: Versionize Release
        id: versionize
        run: dotnet versionize --changelog-all --exit-insignificant-commits
        continue-on-error: true

      - name: No release required
        if: steps.versionize.outcome != 'success'
        run: echo "Skipping Release. No release required."
     
      - name: Create Release
        if: steps.versionize.outcome == 'success'
        uses: actions/github-script@v5
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
            try {
              const current_tag = "${{ steps.get-latest-tag.outputs.LATEST_TAG_NAME }}";
              await github.rest.repos.createRelease({
                draft: false,
                generate_release_notes: true,
                name: current_tag,
                owner: context.repo.owner,
                prerelease: false,
                repo: context.repo.repo,
                tag_name: current_tag,
              });
            } catch (error) {
              core.setFailed(error.message);
            }
      
      - name: Build and Publish
        run: |
          dotnet publish MauiApp_version.csproj -c Release -f:net7.0-windows10.0.19041.0 /p:GenerateAppxPackageOnBuild=true /p
        working-directory: ./MauiApp_version/MauiApp_version

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: maui-app-msix
          path: ./**/*.msix      





        




