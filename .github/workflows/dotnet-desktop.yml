name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x
      - uses: actions/checkout@v2
      - name: MAUIAppVersion
        uses: managedcode/MAUIAppVersion@v1
        with:
          csproj: MauiApp_version/MauiApp_version/MauiApp_version.csproj
          version: ${{ github.run_number }}
          displayVersion: '1.0'
      - name: Install MAUI workload
        run: dotnet workload install maui

      - name: Get Latest Commit Message
        id: get_commit_message
        run: |
          git log -1 --pretty=format:%s ${{ github.sha }} > commit_message.txt

      - name: Bump Semantic Version
        id: bump_version
        run: |
          $COMMIT_MESSAGE = Get-Content -Path commit_message.txt
          $CURRENT_VERSION = (Get-Content -Path MauiApp_version/MauiApp_version/MauiApp_version.csproj -Raw) -replace "(?<=<Version>).*?(?=</Version>)"
          $VERSION_PARTS = $CURRENT_VERSION -split '\.'
          
          if ($COMMIT_MESSAGE -like "*Major*") {
            $NEW_VERSION = "$($VERSION_PARTS[0] + 1).0.0"
          } elseif ($COMMIT_MESSAGE -like "*New Feature*") {
            $NEW_VERSION = "$($VERSION_PARTS[0]).$($VERSION_PARTS[1] + 1).0"
          } elseif ($COMMIT_MESSAGE -like "*Bugs*") {
            $NEW_VERSION = "$($VERSION_PARTS[0]).$($VERSION_PARTS[1]).$($VERSION_PARTS[2] + 1)"
          } else {
            $NEW_VERSION = "$($VERSION_PARTS[0]).$($VERSION_PARTS[1]).$($VERSION_PARTS[2] + 1)"
          }
          
          (Get-Content -Path MauiApp_version/MauiApp_version/MauiApp_version.csproj -Raw) -replace "(?<=<Version>).*?(?=</Version>)", $NEW_VERSION | Set-Content -Path MauiApp_version/MauiApp_version/MauiApp_version.csproj

      - name: Build
        run: | 
          dotnet publish MauiApp_version/MauiApp_version/MauiApp_version.csproj -c Release -f:net7.0-windows10.0.19041.0 /p:GenerateAppxPackageOnBuild=true

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          path: ./**/*.msix


