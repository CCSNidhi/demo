name: .NET

on: 
  push: 
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs: 
  build:
    runs-on: windows-latest  

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x
      - name: MAUIAppVersion
        uses: managedcode/MAUIAppVersion@v1
        with:
          csproj: MauiApp_version/MauiApp_version/MauiApp_version.csproj
          version: ${{ github.run_number }}
          displayVersion: '1.0.0'
      - name: Install MAUI workload 
        run: dotnet workload install maui
      
      - name: Get Last Commit Message
        id: commit_message
        run: |
          $COMMIT_MESSAGE = $(git log -1 --pretty=format:%s)
          echo "::set-output name=message::$COMMIT_MESSAGE"
          
      - name: Run Semantic Version Bump Script
        run: |
          # Place your bump script content here
          # Remember to make the script executable: chmod +x bump.sh
          ./bump.sh -p v ${{ steps.commit_message.outputs.message }}
        working-directory: demo/.github/scripts  # Update this path
        env:
          PREFIX: v
      
      - name: Increment Version
        id: increment_version
        run: |
          $BUMP = '${{ steps.commit_message.outputs.message }}'
          $CURRENT_VERSION = (Get-Content -Path MauiApp_version/MauiApp_version/MauiApp_version.csproj) -replace "(?<=<Version>).*?(?=</Version>)"
          $VERSION_PARTS = $CURRENT_VERSION -split '\.'
          
          if ($BUMP -like "*Bugs*") {
            $NEW_VERSION = "$($VERSION_PARTS[0]).$($VERSION_PARTS[1]).$($VERSION_PARTS[2] + 1)"
          } elseif ($BUMP -like "*minor*") {
            $NEW_VERSION = "$($VERSION_PARTS[0]).$($VERSION_PARTS[1] + 1).0"
          } elseif ($BUMP -like "*patch*") {
            $NEW_VERSION = "$($VERSION_PARTS[0]).$($VERSION_PARTS[1]).$($VERSION_PARTS[2] + 1)"
          } else {
            $NEW_VERSION = $CURRENT_VERSION
          }
          (Get-Content -Path MauiApp_version/MauiApp_version/MauiApp_version.csproj) -replace "(?<=<Version>).*?(?=</Version>)", $NEW_VERSION | Set-Content -Path MauiApp_version/MauiApp_version/MauiApp_version.csproj
          
      - name: Build
        run: dotnet publish MauiApp_version/MauiApp_version/MauiApp_version.csproj -c Release -f:net7.0-windows10.0.19041.0 /p:GenerateAppxPackageOnBuild=true 
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          path: ./**/*.msix
